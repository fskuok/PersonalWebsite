//AI Cover: 1960x1300 16:10
//AI block whole span width:
//1440 = 1600 * 0.9
//1440 = 120 * 12
//120 = 24 + 72 + 24

$col-width: 5%;
$col-number: 12;
$gap-width: ( 100% - $col-width * $col-number ) / ( $col-number * 2 );
$block-width: 80%;
$block-small-width: 98%;


@function spans-width($cols){
    @return $cols * $col-width +  ( $cols - 1 ) * 2 * $gap-width ;
}
@mixin no-gap-span($cols){
    float: left;
    display: block;
    width: spans-width( $cols ) + 2 * $gap-width;
    padding: 0;
}
@mixin span($cols){
    float: left;
    display: block;
    width: spans-width( $cols );
    padding: 0 $gap-width;
    min-height: 10px;
    margin-top: 20px;
    margin-bottom: 20px;


    @media all and (max-width: $small-break-point) {
        min-height: 0;
        width: 100%;
        padding: 0;
        margin: 20px 0;
    }
}

.block{
    /* Box Model */
    width: $block-width;
    padding: 0 (100% - $block-width)/2;
    margin: 0 auto;
    position: relative;
    display: block;
    overflow: auto;


    @media all and (max-width: $small-break-point) {
        width: $block-small-width;
        padding: 0 (100% - $block-small-width)/2;
    }
}

.block-full{
    width: 100%;
    padding: 0;
    position: relative;
    display: block;
    overflow: auto;
}

//span-n-cl: span with clear left
@for $i from 1 through $col-number {
    .span-#{$i}{
        @include span($i);
    }
}
//span-n-cl: span with clear left
@for $i from 1 through $col-number {
    .span-#{$i}-cl{
        @extend .span-#{$i};
        clear: left;
    }
}
//span-n-no-gap: span without gap
@for $i from 1 through $col-number {
    .span-#{$i}-no-gap{
        @include span($i);
        min-height: 10px;
        margin: 0;
    }
}
//span-n-center: centered span
@for $i from 1 through $col-number {
  .span-#{$i}-center{
    @include span($i);
    text-align: center;
    padding: 0 ( $gap-width + ( $col-width + 2 * $gap-width ) * ( $col-number - $i ) / 2 )  ;
  }
}
.span-half{
  width: 50%;
}
.span-full{
  width: 100%;
}

/*
   span-return is used to create some space between two rows of spans
   if just want this span to be on a new row, use span-n-cl
*/

.span-return{
  float: left;
  display: block;
  width: spans-width( 12 );
  padding: 29px $gap-width;
  margin: 0;
  height: 2px;
}